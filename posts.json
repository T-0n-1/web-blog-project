[
  {
    "id": 1,
    "date": "31.01.2024",
    "time": "23:37",
    "title": "Application description",
    "content": "Web Blog Post is an simple app for reading, writing, editing and deleting blog posts. Web Blog Post is built using Node.js and Express.\r\n\r\n-- Key features and functionalities of the program--\r\nImported Modules:\r\nThe program imports several modules, including express, path, fs/promises for asynchronous file operations, body-parser for parsing request bodies, and ejs as the view engine.\r\n\r\nExpress Setup:\r\nAn Express application is created, and middleware like express.static and body-parser is used to handle static files and parse JSON and URL-encoded data in requests.\r\n\r\nView Engine Setup:\r\nEJS (Embedded JavaScript) is set as the view engine for rendering dynamic HTML templates.\r\n\r\nRouting:\r\nVarious routes are defined using app.get and app.post for handling different HTTP requests.\r\nRoutes include home (/ and /home), creating a new post (/newpost), searching (/search), browsing posts (/browse), retrieving post content (/getPostContent/:id), submitting a new post (/submit), deleting a post (/deletePost/:id), updating post views (/updateViews/:id), and editing a post (/editPost/:id).\r\n\r\nFile Operations:\r\nThe program reads and writes posts data from/to a JSON file (posts.json) asynchronously using fs/promises.\r\nThe posts.json file contains an array of post objects, each with properties like id, date, time, title, content, author, email, editable, and views.\r\n\r\nError Handling Middleware:\r\nA custom error-handling middleware is implemented to log errors and send a 500 Internal Server Error response.\r\n\r\nRendering Views:\r\nViews are rendered using EJS templates located in the views directory.\r\nThe res.render method is used to render HTML views and pass data to the templates.\r\n\r\nUtility Functions:\r\nThere is a utility function getDate to generate a formatted date and time string for post submissions.\r\n\r\nListening for Requests:\r\nThe Express application listens on a specified port (3000 in this case) for incoming HTTP requests.\r\n\r\nOverall, the program is a basic web application with CRUD (Create, Read, Update, Delete) operations for posts, user interactions, and dynamic rendering of HTML views using the EJS templating engine.",
    "author": "ToniM",
    "email": "t.mertanen@hotmail.com",
    "editable": "off",
    "views": 43
  },
  {
    "id": 2,
    "date": "06.02.2024",
    "time": "03:10",
    "title": "How To Use Search",
    "content": "HOW TO USE SEARCH\r\nTo search for specific blog posts, you can use various search parameters to refine your results. Here's how:\r\n\r\nKeyword Search: \r\n      Enter one or more keywords related to the topic you're interested in. For example, if you're looking for posts about \"JavaScript programming,\" simply type \"JavaScript programming\" into the search box.\r\n\r\nPartial Matches: \r\n      You can also search for partial matches of words. For example, entering \"cat\" will find posts containing \"cat,\" \"catalog,\" \"category,\" etc.\r\n\r\nDate Search: \r\n      You can search for posts published in a specific year or month. To search for posts published in a specific year, enter the year followed by :: - that is two colon characters. For example, to search for posts from the year 2024, type 2024:: in the search box.\r\n      To search for posts published in a specific month and year, enter both the month and year separated by ::. For example, to search for posts from January 2024, type 2024::01 in the search box.\r\n      If you want to search for posts from a specific month regardless of the year, simply enter the month in the format ::month. For example, to search for posts from January, type ::01.\r\n\r\nCombining Keywords and Dates: \r\n      You can combine keyword searches with date searches to narrow down your results further. For example, to find posts about \"JavaScript programming\" published in January 2024, type 2024::01 JavaScript programming in the search box.\r\n\r\nAfter entering your search query, press Enter or click the search button to see the results.",
    "author": "ToniM",
    "email": "t.mertanen@hotmail.com",
    "editable": "off",
    "views": 1
  }
]